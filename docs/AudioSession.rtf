{\rtf1\ansi\ansicpg1252\cocoartf1348\cocoasubrtf170
{\fonttbl\f0\fnil\fcharset0 LucidaGrande;\f1\fmodern\fcharset0 Courier;}
{\colortbl;\red255\green255\blue255;\red46\green58\blue89;\red83\green83\blue83;\red39\green78\blue192;
}
{\*\listtable{\list\listtemplateid1\listhybrid{\listlevel\levelnfc0\levelnfcn0\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{decimal\}}{\leveltext\leveltemplateid1\'01\'00;}{\levelnumbers\'01;}\fi-360\li720\lin720 }{\listname ;}\listid1}}
{\*\listoverridetable{\listoverride\listid1\listoverridecount0\ls1}}
\margl1440\margr1440\vieww24900\viewh10420\viewkind0
\deftab720
\pard\pardeftab720

\f0\fs48 \cf2 \expnd0\expndtw0\kerning0
Sound Streams\
\pard\pardeftab720

\fs26 \cf0 \expnd0\expndtw0\kerning0
Unlike a disk-based sound file, an audio file stream is audio data whose beginning and end you may not have access to. You encounter streams, for example, when you build an Internet radio player application. A provider typically sends their stream continuously. When a user presses Play to listen in, your application needs to jump aboard no matter what data is going by at the moment\'97the start, middle, or end of an audio packet, or perhaps a magic cookie.\
Also unlike a sound file, a stream\'92s data may not be reliably available. There may be dropouts, discontinuities, or pauses\'97depending on the vagaries of the network you get the stream from.\
Audio File Stream Services lets your application work with streams and all their complexities. It takes care of the parsing.\
To use Audio File Stream Services, you create an audio file stream object, of type 
\f1 \cf3 \expnd0\expndtw0\kerning0
AudioFileStreamID
\f0 \cf0 \expnd0\expndtw0\kerning0
. This object serves as a proxy for the stream itself. This object also lets your application know what\'92s going on with the stream by way of properties (see \cf4 \expnd0\expndtw0\kerning0
Properties, Scopes, and Elements\cf0 \expnd0\expndtw0\kerning0
). For example, when Audio File Stream Services has determined the bit rate for a stream, it sets the 
\f1 \cf3 \expnd0\expndtw0\kerning0
kAudioFileStreamProperty_BitRate
\f0 \cf0 \expnd0\expndtw0\kerning0
 property on your audio file stream object.\
Because Audio File Stream Services performs the parsing, it becomes your application\'92s role to respond to being given sets of audio data and other information. You make your application responsive in this way by defining two callback functions.\
First, you need a callback for property changes in your audio file stream object. At a minimum, you write this callback to respond to changes in the 
\f1 \cf3 \expnd0\expndtw0\kerning0
kAudioFileStreamProperty_ReadyToProducePackets
\f0 \cf0 \expnd0\expndtw0\kerning0
 property. The typical scenario for using this property is as follows:\
\pard\tx220\tx720\pardeftab720\li720\fi-720
\ls1\ilvl0\cf0 \kerning1\expnd0\expndtw0 {\listtext	1	}\expnd0\expndtw0\kerning0
A user presses Play, or otherwise requests that a stream start playing.\
\ls1\ilvl0\kerning1\expnd0\expndtw0 {\listtext	2	}\expnd0\expndtw0\kerning0
Audio File Stream Services starts parsing the stream.\
\ls1\ilvl0\kerning1\expnd0\expndtw0 {\listtext	3	}\expnd0\expndtw0\kerning0
When enough audio data packets are parsed to send them along to your application, Audio File Stream Services sets the 
\f1 \cf3 \expnd0\expndtw0\kerning0
kAudioFileStreamProperty_ReadyToProducePackets
\f0 \cf0 \expnd0\expndtw0\kerning0
 property to 
\f1 \cf3 \expnd0\expndtw0\kerning0
true
\f0 \cf0 \expnd0\expndtw0\kerning0
 (actually, to a value of 
\f1 \cf3 \expnd0\expndtw0\kerning0
1
\f0 \cf0 \expnd0\expndtw0\kerning0
) in your audio file stream object.\
\ls1\ilvl0\kerning1\expnd0\expndtw0 {\listtext	4	}\expnd0\expndtw0\kerning0
Audio File Stream Services invokes your application\'92s property listener callback, with a property ID value of 
\f1 \cf3 \expnd0\expndtw0\kerning0
kAudioFileStreamProperty_ReadyToProducePackets
\f0 \cf0 \expnd0\expndtw0\kerning0
.\
\ls1\ilvl0\kerning1\expnd0\expndtw0 {\listtext	5	}\expnd0\expndtw0\kerning0
Your property listener callback takes appropriate action, such as setting up an audio queue object for playback of the stream.\
\pard\pardeftab720
\cf0 \expnd0\expndtw0\kerning0
Second, you need a callback for the audio data. Audio File Stream Services calls this callback whenever it has collected a set of complete audio data packets. You define this callback to handle the received audio. Typically, you play it back immediately by sending it along to Audio Queue Services. For more on playback, see the next section, \cf4 \expnd0\expndtw0\kerning0
Recording and Playback using Audio Queue Services\cf0 \expnd0\expndtw0\kerning0
.\
\
\
\

\itap1\trowd \taflags1 \trgaph108\trleft-108 \trbrdrt\brdrnil \trbrdrl\brdrnil \trbrdrr\brdrnil 
\clvertalc \clshdrawnil \clwWidth24241\clftsWidth3 \clbrdrt\brdrnil \clbrdrl\brdrnil \clbrdrb\brdrnil \clbrdrr\brdrnil \clpadt119 \clpadl119 \clpadb119 \clpadr119 \gaph\cellx8640
\pard\intbl\itap1\pardeftab720

\f1\fs24 \cf3 \expnd0\expndtw0\kerning0
NSError *setCategoryError = nil;\
\cell \row

\itap1\trowd \taflags1 \trgaph108\trleft-108 \trbrdrl\brdrnil \trbrdrr\brdrnil 
\clvertalc \clshdrawnil \clwWidth24241\clftsWidth3 \clbrdrt\brdrnil \clbrdrl\brdrnil \clbrdrb\brdrnil \clbrdrr\brdrnil \clpadt119 \clpadl119 \clpadb119 \clpadr119 \gaph\cellx8640
\pard\intbl\itap1\pardeftab720
\cf3 \expnd0\expndtw0\kerning0
BOOL success = [[AVAudioSession sharedInstance] \cell \row

\itap1\trowd \taflags1 \trgaph108\trleft-108 \trbrdrl\brdrnil \trbrdrr\brdrnil 
\clvertalc \clshdrawnil \clwWidth24241\clftsWidth3 \clbrdrt\brdrnil \clbrdrl\brdrnil \clbrdrb\brdrnil \clbrdrr\brdrnil \clpadt119 \clpadl119 \clpadb119 \clpadr119 \gaph\cellx8640
\pard\intbl\itap1\pardeftab720
\cf3 \expnd0\expndtw0\kerning0
                setCategory: A
\fs26 \expnd0\expndtw0\kerning0
AVAudioSessionCategoryRecord ; AVAudioSessionCategoryPlayAndRecord ?
\fs24 \expnd0\expndtw0\kerning0
\cell \row

\itap1\trowd \taflags1 \trgaph108\trleft-108 \trbrdrl\brdrnil \trbrdrr\brdrnil 
\clvertalc \clshdrawnil \clwWidth24241\clftsWidth3 \clbrdrt\brdrnil \clbrdrl\brdrnil \clbrdrb\brdrnil \clbrdrr\brdrnil \clpadt119 \clpadl119 \clpadb119 \clpadr119 \gaph\cellx8640
\pard\intbl\itap1\pardeftab720
\cf3 \expnd0\expndtw0\kerning0
                error: &setCategoryError];\cell \row

\itap1\trowd \taflags1 \trgaph108\trleft-108 \trbrdrl\brdrnil \trbrdrr\brdrnil 
\clvertalc \clshdrawnil \clwWidth24241\clftsWidth3 \clbrdrt\brdrnil \clbrdrl\brdrnil \clbrdrb\brdrnil \clbrdrr\brdrnil \clpadt119 \clpadl119 \clpadb119 \clpadr119 \gaph\cellx8640
\pard\intbl\itap1\pardeftab720
\cf3 \expnd0\expndtw0\kerning0
\cell \row

\itap1\trowd \taflags1 \trgaph108\trleft-108 \trbrdrl\brdrnil \trbrdrt\brdrnil \trbrdrr\brdrnil 
\clvertalc \clshdrawnil \clwWidth24241\clftsWidth3 \clbrdrt\brdrnil \clbrdrl\brdrnil \clbrdrb\brdrnil \clbrdrr\brdrnil \clpadt119 \clpadl119 \clpadb119 \clpadr119 \gaph\cellx8640
\pard\intbl\itap1\pardeftab720
\cf3 \expnd0\expndtw0\kerning0
if (!success) \{ /* handle the error in setCategoryError */ \}\
\
\pard\intbl\itap1\pardeftab720

\f0\fs26 \cf0 \expnd0\expndtw0\kerning0
Set the mode for a category to further define the audio behaviors of your app 
\f1 \cf3 \expnd0\expndtw0\kerning0
AVAudioSessionModeMeasurement\
\

\f0 \cf0 \expnd0\expndtw0\kerning0
To perform the override, apply the {\field{\*\fldinst{HYPERLINK "https://developer.apple.com/library/prerelease/ios/documentation/AVFoundation/Reference/AVAudioSession_ClassReference/index.html#//apple_ref/c/econst/AVAudioSessionCategoryOptionMixWithOthers"}}{\fldrslt 
\f1 \cf4 \expnd0\expndtw0\kerning0
AVAudioSessionCategoryOptionMixWithOthers}} property to your audio session
\f1\fs24 \cf3 \expnd0\expndtw0\kerning0
\cell \lastrow\row
}